name: Delivery
on:
  push:
    branches:
      - main

jobs:
  deploy:
    env:
      DEPLOY_DIRECTORY: /usr/local/src/apps/discord-purger-chat
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4
      - name: Create workdir
        run: |
          sudo apt-get install ssh
          echo "$DEPLOY_SSH_KEY" > deploy_key.pem
          chmod 600 deploy_key.pem
          ssh -o "StrictHostKeyChecking=no" ${{ secrets.HOST }} -i deploy_key.pem "mkdir -p ${{ env.DEPLOY_DIRECTORY }}"
        env:
          DEPLOY_SSH_KEY: ${{ secrets.DEPLOY_SSH_KEY }}
      - name: Sync data
        run: |
          ssh -o "StrictHostKeyChecking=no" ${{ secrets.HOST }} -i deploy_key.pem "cd ${{ env.DEPLOY_DIRECTORY }} && touch .env && echo TOKEN=${{ secrets.APP_TOKEN}} > .env"
          rsync -avz -e 'ssh -i deploy_key.pem -o StrictHostKeyChecking=no' --exclude='.git' ./ ${{ secrets.HOST }}:${{ env.DEPLOY_DIRECTORY }}
      - name: Build and start app
        run: ssh -o "StrictHostKeyChecking=no" ${{ secrets.HOST }} -i deploy_key.pem "cd ${{ env.DEPLOY_DIRECTORY }} && docker-compose up -d"
      - name: Copy systemd service file
        run: |
          scp -i deploy_key.pem -o StrictHostKeyChecking=no ${{ github.workspace }}/deployment/discord-purger-chat.service ${{ secrets.HOST }}:/tmp/discord-purger-chat.service
          ssh -i deploy_key.pem -o StrictHostKeyChecking=no ${{ secrets.HOST }} "mv /tmp/discord-purger-chat.service /etc/systemd/system/discord-purger-chat.service"
      - name: Start application
        run: |
          ssh -i deploy_key.pem -o StrictHostKeyChecking=no ${{ secrets.HOST }} "systemctl daemon-reload && systemctl restart discord-purger-chat.service"